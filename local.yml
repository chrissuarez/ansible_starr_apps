---
- hosts: localhost
  become: true
  vars:
    docker_user: chris
    star_apps:
      - name: radarr
        config: radarr_config.xml
      - name: sonarr
        config: sonarr_config.xml
      - name: sabnzbd
        config: sabnzbd_config.ini

  pre_tasks:
    - name: Update repository index (Ubuntu)
      apt:
        update_cache: yes
      changed_when: false
      when: ansible_distribution == "Ubuntu"

  tasks:
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - nfs-common
        - docker.io
        - docker-compose
      become: yes

    - name: Configure NFS
      block:
        - name: Add NFS mount to fstab
          lineinfile:
            path: /etc/fstab
            line: "192.168.68.16:/volume1/downloads /mnt/downloads nfs rw,sync 0 0"
            state: present
            create: yes
          become: yes

        - name: Create NFS share mount point
          file:
            path: /mnt/downloads
            state: directory
            mode: 0777
          become: yes

        - name: Mount NFS share
          mount:
            path: /mnt/downloads
            src: "192.168.68.16:/volume1/downloads"
            fstype: nfs
            opts: "rw,sync"
            state: mounted
          become: yes

    - name: Add Docker user to sudo group
      user:
        name: "{{ docker_user }}"
        groups: sudo
        append: yes

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ docker_user }}"
        group: "{{ docker_user }}"
        mode: 0755
      loop:
        - /home/{{ docker_user }}/docker-compose
        - /home/{{ docker_user }}/star-apps

    - name: Copy docker-compose file
      copy:
        src: files/docker-compose.yml
        dest: /home/{{ docker_user }}/docker-compose/docker-compose.yml
        owner: "{{ docker_user }}"
        group: "{{ docker_user }}"
        mode: 0644

    - name: Copy and decrypt Star App configs
      block:
        - name: Copy encrypted Star App Config Files
          copy:
            src: "/home/chris/star-apps/{{ item.name }}/{{ item.config }}"
            dest: /home/{{ docker_user }}/star-apps/{{ item.name }}/{{ item.config }}
            owner: "{{ docker_user }}"
            group: "{{ docker_user }}"
            mode: 0775
            remote_src: yes
          loop: "{{ star_apps }}"

        - name: Decrypt Star Config Files
          ansible.builtin.command: ansible-vault decrypt --vault-password-file /home/{{ docker_user }}/.vault_key {{ item }}
          loop: "{{ star_apps | map(attribute='config') | map('regex_replace', '(.*)', '/home/' + docker_user + '/star-apps/' + lookup('vars', 'item.name') + '/\\1') | list }}"

        - name: Update permissions on Star app files
          file:
            path: "/home/{{ docker_user }}/star-apps/{{ item.name }}/{{ item.config }}"
            owner: "{{ docker_user }}"
            group: "{{ docker_user }}"
            mode: 0644
          loop: "{{ star_apps }}"

